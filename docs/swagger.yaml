basePath: /
definitions:
  controllers.CreateParam:
    properties:
      customerName:
        example: Irvan
        type: string
      items:
        items:
          $ref: '#/definitions/controllers.ItemParam'
        type: array
      orderedAt:
        example: "2024-03-11T12:34:56Z"
        type: string
    type: object
  controllers.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  controllers.ItemParam:
    properties:
      description:
        example: Sabun
        type: string
      itemCode:
        example: 1
        type: integer
      quantity:
        example: 12
        type: integer
    type: object
  controllers.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  controllers.UpdateItemParam:
    properties:
      description:
        example: Sampo
        type: string
      itemCode:
        example: 1
        type: integer
      lineItemId:
        example: 1
        type: integer
      quantity:
        example: 1
        type: integer
    type: object
  controllers.UpdateParam:
    properties:
      customerName:
        example: Muhandis
        type: string
      items:
        items:
          $ref: '#/definitions/controllers.UpdateItemParam'
        type: array
      orderedAt:
        example: "2024-03-11T12:34:56Z"
        type: string
    type: object
  model.Item:
    properties:
      description:
        type: string
      item_code:
        type: integer
      item_id:
        type: integer
      order_id:
        type: integer
      quantity:
        type: integer
    type: object
  model.Order:
    properties:
      customer_name:
        type: string
      items:
        items:
          $ref: '#/definitions/model.Item'
        type: array
      order_id:
        type: integer
      ordered_at:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: irvanmuhandis@gmail.com
    name: M.Irvan Muhandis
    url: https://wa.me/6285701514915
  description: This is a REST API created to fullfil assignment class
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Assignment 2 REST API M.Irvan Muhandis
  version: "1.0"
paths:
  /orders:
    get:
      description: Fetching all order data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Order'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get list of Order
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Creating Order based on input
      parameters:
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateParam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Creating Order
      tags:
      - orders
  /orders/{orderId}:
    delete:
      consumes:
      - application/json
      description: Delete a specific order data
      parameters:
      - description: Order ID
        in: path
        name: orderId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Delete Order
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update a specific order data
      parameters:
      - description: Order ID
        in: path
        name: orderId
        required: true
        type: integer
      - description: Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Update Order
      tags:
      - orders
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
